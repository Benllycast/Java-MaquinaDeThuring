/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConjuntoSimbolos.java
 *
 * Created on 20/09/2010, 05:48:42 PM
 */

package vista;

import javax.swing.JOptionPane;
import Controlador.*;
import Modelo.*;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Benlly
 */
public class ConjuntoSimbolos extends javax.swing.JDialog {


    private AdminSimbolos administrador;
    /** Creates new form ConjuntoSimbolos */
    public ConjuntoSimbolos(MaquinaTuring parent, boolean modal) {
        super(parent, modal);
        initComponents();
        administrador = parent.getAdministrador();
        load();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_especiales = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_alfabeto = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CONJUNTO DE SIMBOLOS");

        jButton7.setText("Aceptar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptar(evt);
            }
        });

        jTable_especiales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "numero", "simbolo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_especiales);

        jTable_alfabeto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "numero", "simbolo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable_alfabeto);

        jButton1.setText("Agregar a Alfabeto");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_Alfabeto(evt);
            }
        });

        jButton2.setText("Borrar de alfabeto");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarSimboloDelConjunto(evt);
            }
        });

        jButton5.setText("Borrar de Especial");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarSimboloDelConjunto(evt);
            }
        });

        jButton6.setText("Agregar a Especial");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_Especial(evt);
            }
        });

        jLabel1.setText("Simbolos del Alfabeto de Entrada");

        jLabel2.setText("Simbolos Especiales");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5))
                    .addComponent(jButton7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addGap(4, 4, 4))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregar_Alfabeto(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_Alfabeto
        //this.agregar_simbolo(evt);
        int ing = 0;
        String simbolo = JOptionPane.showInputDialog(this, "Ingrese El nuevo Simbolo").trim();//verificar Blanco
        Simbolo nuevoSimbolo = new ControladorSimbolos().crearSimbolo(simbolo);

        if(!simbolo.equals("")&&!simbolo.equals(" ")){
            ing = administrador.agregarSimboloEnAlfabeto(nuevoSimbolo);            
        }
        if(ing == 1){
            DefaultTableModel table = (DefaultTableModel) jTable_alfabeto.getModel();
            table.addRow(new Object[]{nuevoSimbolo.numero,nuevoSimbolo.simbolo});
            JOptionPane.showMessageDialog(this, "Simbolo Ingresado con exito");
        }else if(ing == 0){
            JOptionPane.showMessageDialog(this, "No se puede ingresar el simbolo \""+nuevoSimbolo.simbolo+"\"","Error",JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_agregar_Alfabeto

    private void agregar_Especial(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_Especial
        /*this.agregar_simbolo(evt);*/
        int ing = 0;
        String simbolo = JOptionPane.showInputDialog(this, "Ingrese El nuevo Simbolo").trim();//verificar Blanco
        Simbolo nuevoSimbolo = new ControladorSimbolos().crearSimbolo(simbolo);

        if(!simbolo.equals("")&&!simbolo.equals(" ")){
            ing = administrador.agregarSimboloEnEspeciales(nuevoSimbolo);
        }
        if(ing == 1){
            DefaultTableModel table = (DefaultTableModel) jTable_especiales.getModel();
            table.addRow(new Object[]{nuevoSimbolo.numero,nuevoSimbolo.simbolo});
            JOptionPane.showMessageDialog(this, "Simbolo Ingresado con exito");
        }else if(ing == 0){
            JOptionPane.showMessageDialog(this, "No se puede ingresar el simbolo \""+nuevoSimbolo.simbolo+"\"","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_agregar_Especial

    private void borrarSimboloDelConjunto(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarSimboloDelConjunto

        if(evt.getSource().equals(jButton2)){
            if(jTable_alfabeto.getSelectedRow() == -1){
                JOptionPane.showMessageDialog(this, "Seleccione un simbolo del alfabeto","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int numero_simbolo = Integer.parseInt(jTable_alfabeto.getValueAt(jTable_alfabeto.getSelectedRow(), 0).toString());
            Simbolo aBorrar = administrador.getSimboloAlfabeto(numero_simbolo);
            if(aBorrar!= null){
                if(administrador.borrarDeAlfabeto(aBorrar)){
                    JOptionPane.showMessageDialog(this, "Simbolo \""+aBorrar.getsimbolo()+"\" ha sido borrado del conjunto", "Borrar Simbolo", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(this, "Simbolo \""+aBorrar.getsimbolo()+"\" No Borrado", "Borrar Simbolo", JOptionPane.ERROR_MESSAGE);
                }
            }
        }else if(evt.getSource().equals(jButton5)){
            if(jTable_especiales.getSelectedRow() == -1){
                JOptionPane.showMessageDialog(this, "Seleccione un simbolo del alfabeto","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(jTable_especiales.getValueAt(jTable_especiales.getSelectedRow(), 1).toString().equals("#")){
                JOptionPane.showMessageDialog(this, "El simbolo \"#\" (blanco) no puede ser borrado","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int numero_simbolo = Integer.parseInt(jTable_especiales.getValueAt(jTable_especiales.getSelectedRow(), 0).toString());
            Simbolo aBorrar = administrador.getSimboloEspecial(numero_simbolo);
            if(aBorrar!= null){
                if(administrador.borrarDeEspeciales(aBorrar)){
                    JOptionPane.showMessageDialog(this, "Simbolo \""+aBorrar.getsimbolo()+"\" ha sido borrado del conjunto", "Borrar Simbolo", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(this, "Simbolo \""+aBorrar.getsimbolo()+"\" No Borrado", "Borrar Simbolo", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        updateTables();
    }//GEN-LAST:event_borrarSimboloDelConjunto

    private void aceptar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptar
        dispose();
    }//GEN-LAST:event_aceptar

    private void load() {
        Simbolo simbolo;
        ArrayList<Simbolo> listaAlfabeto = administrador.getTodoAlfabeto();
        ArrayList<Simbolo> listaEspeciales = administrador.getTodoEspeciales();
        Iterator i = listaAlfabeto.iterator();
        DefaultTableModel table = (DefaultTableModel) jTable_alfabeto.getModel();
        while(i.hasNext()){
            simbolo = (Simbolo)i.next();
            table.addRow(new Object[]{simbolo.getnumero(),simbolo.getsimbolo()});
        }

        Iterator i2 = listaEspeciales.iterator();
        DefaultTableModel table2 = (DefaultTableModel) jTable_especiales.getModel();
        while(i2.hasNext()){
            simbolo = (Simbolo)i2.next();
            table2.addRow(new Object[]{simbolo.getnumero(),simbolo.getsimbolo()});
        }
    }

    private void updateTables() {
        borrarTodasLasFilas((DefaultTableModel)jTable_alfabeto.getModel());
        borrarTodasLasFilas((DefaultTableModel)jTable_especiales.getModel());
        load();
    }

    public void borrarTodasLasFilas(DefaultTableModel dtm){
        for (int i = dtm.getRowCount() -1; i >= 0; i--){
            dtm.removeRow(i);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable_alfabeto;
    private javax.swing.JTable jTable_especiales;
    // End of variables declaration//GEN-END:variables



}
