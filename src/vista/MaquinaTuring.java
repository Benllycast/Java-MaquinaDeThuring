/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MaquinaTuring.java
 *
 * Created on 20/09/2010, 05:45:16 PM
 */

package vista;


import Modelo.AdminSimbolos;
import Modelo.Cinta;
import Modelo.ConjuntoEstados;
import Modelo.EstadosFinales;
import Modelo.UnidadControl;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Benlly
 */
public class MaquinaTuring extends javax.swing.JFrame {


    private AdminSimbolos administrador = new AdminSimbolos();
    private Modelo.ConjuntoEstados conjuntoEstados = new Modelo.ConjuntoEstados();
    private Modelo.EstadosFinales estadosFinales = new Modelo.EstadosFinales();
    private Modelo.Cinta cinta = null;
    private Modelo.UnidadControl unidad = new UnidadControl();
    private Modelo.MaquinaTuring maquina = null;

    /** Creates new form MaquinaTuring */
    public MaquinaTuring() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MaquinaTuring.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(MaquinaTuring.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MaquinaTuring.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MaquinaTuring.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        loadConfig();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TM");
        setResizable(false);

        jButton1.setText("Crear Conjunto de Simbolos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearConjuntoDeSimbolos(evt);
            }
        });

        jButton2.setText("Crear conjunto de estados");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conjunto_estados(evt);
            }
        });

        jButton3.setText("Crear maquina");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearMaquina(evt);
            }
        });

        jButton4.setText("Ejecutar maquina");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejecutarMaquina(evt);
            }
        });

        jLabel1.setText("<html>Benjamin Castillo Castro&#174;<br> Carlos Bermdez Torres<html>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crearConjuntoDeSimbolos(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearConjuntoDeSimbolos
        // TODO add your handling code here:
        ConjuntoSimbolos ventana = new ConjuntoSimbolos(this, true);
        ventana.setVisible(true);
    }//GEN-LAST:event_crearConjuntoDeSimbolos

    private void conjunto_estados(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conjunto_estados
        // TODO add your handling code here:
        vista.ConjuntoEstados ventanaConjuntoEstados = new vista.ConjuntoEstados(this, rootPaneCheckingEnabled);
        ventanaConjuntoEstados.setVisible(true);
    }//GEN-LAST:event_conjunto_estados

    private void crearMaquina(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearMaquina
        vista.CrearMaquina nuevaMaquina = new vista.CrearMaquina(this, rootPaneCheckingEnabled);
        nuevaMaquina.setVisible(true);
    }//GEN-LAST:event_crearMaquina

    private void ejecutarMaquina(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejecutarMaquina
        if(this.verificarConfiguracion())return;

        new EjecutarMaquina(this, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_ejecutarMaquina

    public AdminSimbolos getAdministrador(){
        return this.administrador;
    }

    public ConjuntoEstados getConjuntoEstados() {
        return conjuntoEstados;
    }

    public EstadosFinales getEstadosFinales() {
        return estadosFinales;
    }

    public Cinta getCinta() {
        return cinta;
    }

    public void setCinta(Cinta cita) {
        this.cinta = cita;
    }

    public Modelo.MaquinaTuring getMaquina() {
        return maquina;
    }

    public void setMaquina(Modelo.MaquinaTuring maquina) {
        this.maquina = maquina;
    }

    public UnidadControl getUnidad() {
        return unidad;
    }

    public void setUnidad(UnidadControl unidad) {
        this.unidad = unidad;
    }

    public void loadConfig(){
        this.conjuntoEstados.agregarEstado(new Modelo.Estado());
    }

    public boolean verificarConfiguracion(){
        if(this.getAdministrador().getTodoAlfabeto().isEmpty()){
            JOptionPane.showMessageDialog(this, "Ingrese el alafabeto de entrada", "Ejecutar Maquina", JOptionPane.INFORMATION_MESSAGE);
            return true;
        }
        if(this.getAdministrador().getTodoEspeciales().isEmpty()){
            JOptionPane.showMessageDialog(this, "Ingrese Simbolos especiales para el alfabeto de la cinta", "Ejecutar Maquina", JOptionPane.INFORMATION_MESSAGE);
            return true;
        }
        if(this.getAdministrador().getSimbolo("#")== null){
            JOptionPane.showMessageDialog(this, "El caracter \"#\"(blanco) no esta definido", "Ejecutar Maquina", JOptionPane.INFORMATION_MESSAGE);
            return true;
        }
        if(this.getConjuntoEstados().getListEstados().isEmpty()){
            JOptionPane.showMessageDialog(this, "El conjunto de estados no esta definido", "Ejecutar Maquina", JOptionPane.INFORMATION_MESSAGE);
            return true;
        }
        if(this.getUnidad().getStateIncial() == null){
            JOptionPane.showMessageDialog(this, "El Estado Inicial no esta definido", "Ejecutar Maquina", JOptionPane.INFORMATION_MESSAGE);
            return true;
        }
        if(this.getEstadosFinales().getListEstados().isEmpty()){
            JOptionPane.showMessageDialog(this, "El no hay un estado Final Definido", "Ejecutar Maquina", JOptionPane.INFORMATION_MESSAGE);
            return true;
        }
        if(this.cinta == null || this.cinta.getCadena() == null){
            JOptionPane.showMessageDialog(this, "No hay una cinta para la maquina", "Ejecutar Maquina", JOptionPane.INFORMATION_MESSAGE);
            return true;
        }
        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

}
